{"name": "test_buy_button", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a class=\"btnx new green buy js-buy-button\" data-detail-wear=\"New\" href=\"javascript:detailOrder();\">...</a> is not clickable at point (1296, 871). Other element would receive the click: <div class=\"cookies-info__inner\">...</div>\n  (Session info: chrome=127.0.6533.89)\nStacktrace:\n\tGetHandleVerifier [0x010D8923+23283]\n\t(No symbol) [0x0109E934]\n\t(No symbol) [0x00FD0733]\n\t(No symbol) [0x010191C7]\n\t(No symbol) [0x010175D9]\n\t(No symbol) [0x010154CB]\n\t(No symbol) [0x01014AAF]\n\t(No symbol) [0x010099EF]\n\t(No symbol) [0x0103441C]\n\t(No symbol) [0x01009485]\n\t(No symbol) [0x010346B4]\n\t(No symbol) [0x0104CB8D]\n\t(No symbol) [0x010341B6]\n\t(No symbol) [0x01008017]\n\t(No symbol) [0x0100890D]\n\tGetHandleVerifier [0x011CA5F3+1013699]\n\tGetHandleVerifier [0x011D3E4C+1052700]\n\tGetHandleVerifier [0x011CD4B4+1025668]\n\tGetHandleVerifier [0x010FEA2B+179195]\n\t(No symbol) [0x010A6833]\n\t(No symbol) [0x010A3198]\n\t(No symbol) [0x010A3337]\n\t(No symbol) [0x0109B4BE]\n\tBaseThreadInitThunk [0x77467BA9+25]\n\tRtlInitializeExceptionChain [0x7767C10B+107]\n\tRtlClearBits [0x7767C08F+191]", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"461413004e5ef8642d921236ffcb26f2\")>\n\n    @allure.feature('Product page')\n    def test_buy_button(driver):\n        main_page = MainPage(driver)\n        main_page.open()\n        main_page.close_privacy_window()\n        main_page.open_first_product()\n        product_page = ProductPage(driver)\n>       product_page.buy_product()\n\ntests\\test_product.py:59: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\product_page.py:39: in buy_product\n    self.click(self.BUY_BUTTON)\npages\\base_page.py:31: in click\n    element.click()\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000023838CDA630>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...dInitThunk [0x77467BA9+25]\\\\n\\\\tRtlInitializeExceptionChain [0x7767C10B+107]\\\\n\\\\tRtlClearBits [0x7767C08F+191]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a class=\"btnx new green buy js-buy-button\" data-detail-wear=\"New\" href=\"javascript:detailOrder();\">...</a> is not clickable at point (1296, 871). Other element would receive the click: <div class=\"cookies-info__inner\">...</div>\nE         (Session info: chrome=127.0.6533.89)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x010D8923+23283]\nE       \t(No symbol) [0x0109E934]\nE       \t(No symbol) [0x00FD0733]\nE       \t(No symbol) [0x010191C7]\nE       \t(No symbol) [0x010175D9]\nE       \t(No symbol) [0x010154CB]\nE       \t(No symbol) [0x01014AAF]\nE       \t(No symbol) [0x010099EF]\nE       \t(No symbol) [0x0103441C]\nE       \t(No symbol) [0x01009485]\nE       \t(No symbol) [0x010346B4]\nE       \t(No symbol) [0x0104CB8D]\nE       \t(No symbol) [0x010341B6]\nE       \t(No symbol) [0x01008017]\nE       \t(No symbol) [0x0100890D]\nE       \tGetHandleVerifier [0x011CA5F3+1013699]\nE       \tGetHandleVerifier [0x011D3E4C+1052700]\nE       \tGetHandleVerifier [0x011CD4B4+1025668]\nE       \tGetHandleVerifier [0x010FEA2B+179195]\nE       \t(No symbol) [0x010A6833]\nE       \t(No symbol) [0x010A3198]\nE       \t(No symbol) [0x010A3337]\nE       \t(No symbol) [0x0109B4BE]\nE       \tBaseThreadInitThunk [0x77467BA9+25]\nE       \tRtlInitializeExceptionChain [0x7767C10B+107]\nE       \tRtlClearBits [0x7767C08F+191]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: ElementClickInterceptedException"}, "steps": [{"name": "Open main page", "status": "passed", "steps": [{"name": "Open page", "status": "passed", "start": 1722613912948, "stop": 1722613920903}], "start": 1722613912948, "stop": 1722613920903}, {"name": "Close privacy window", "status": "passed", "steps": [{"name": "Click element on element", "status": "passed", "steps": [{"name": "Get element", "status": "passed", "start": 1722613920903, "stop": 1722613920951}], "start": 1722613920903, "stop": 1722613921042}], "start": 1722613920903, "stop": 1722613921042}, {"name": "Open first product", "status": "passed", "steps": [{"name": "Click element on element", "status": "passed", "steps": [{"name": "Get element", "status": "passed", "start": 1722613921042, "stop": 1722613921096}], "start": 1722613921042, "stop": 1722613922513}], "start": 1722613921042, "stop": 1722613922513}, {"name": "Buy products", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a class=\"btnx new green buy js-buy-button\" data-detail-wear=\"New\" href=\"javascript:detailOrder();\">...</a> is not clickable at point (1296, 871). Other element would receive the click: <div class=\"cookies-info__inner\">...</div>\n  (Session info: chrome=127.0.6533.89)\nStacktrace:\n\tGetHandleVerifier [0x010D8923+23283]\n\t(No symbol) [0x0109E934]\n\t(No symbol) [0x00FD0733]\n\t(No symbol) [0x010191C7]\n\t(No symbol) [0x010175D9]\n\t(No symbol) [0x010154CB]\n\t(No symbol) [0x01014AAF]\n\t(No symbol) [0x010099EF]\n\t(No symbol) [0x0103441C]\n\t(No symbol) [0x01009485]\n\t(No symbol) [0x010346B4]\n\t(No symbol) [0x0104CB8D]\n\t(No symbol) [0x010341B6]\n\t(No symbol) [0x01008017]\n\t(No symbol) [0x0100890D]\n\tGetHandleVerifier [0x011CA5F3+1013699]\n\tGetHandleVerifier [0x011D3E4C+1052700]\n\tGetHandleVerifier [0x011CD4B4+1025668]\n\tGetHandleVerifier [0x010FEA2B+179195]\n\t(No symbol) [0x010A6833]\n\t(No symbol) [0x010A3198]\n\t(No symbol) [0x010A3337]\n\t(No symbol) [0x0109B4BE]\n\tBaseThreadInitThunk [0x77467BA9+25]\n\tRtlInitializeExceptionChain [0x7767C10B+107]\n\tRtlClearBits [0x7767C08F+191]\n\n", "trace": "  File \"D:\\PycharmProjects\\Alza_diplom\\pages\\product_page.py\", line 39, in buy_product\n    self.click(self.BUY_BUTTON)\n  File \"D:\\PycharmProjects\\Alza_diplom\\pages\\base_page.py\", line 31, in click\n    element.click()\n  File \"D:\\PycharmProjects\\Alza_diplom\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"D:\\PycharmProjects\\Alza_diplom\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\PycharmProjects\\Alza_diplom\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"D:\\PycharmProjects\\Alza_diplom\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "steps": [{"name": "Click element on element", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a class=\"btnx new green buy js-buy-button\" data-detail-wear=\"New\" href=\"javascript:detailOrder();\">...</a> is not clickable at point (1296, 871). Other element would receive the click: <div class=\"cookies-info__inner\">...</div>\n  (Session info: chrome=127.0.6533.89)\nStacktrace:\n\tGetHandleVerifier [0x010D8923+23283]\n\t(No symbol) [0x0109E934]\n\t(No symbol) [0x00FD0733]\n\t(No symbol) [0x010191C7]\n\t(No symbol) [0x010175D9]\n\t(No symbol) [0x010154CB]\n\t(No symbol) [0x01014AAF]\n\t(No symbol) [0x010099EF]\n\t(No symbol) [0x0103441C]\n\t(No symbol) [0x01009485]\n\t(No symbol) [0x010346B4]\n\t(No symbol) [0x0104CB8D]\n\t(No symbol) [0x010341B6]\n\t(No symbol) [0x01008017]\n\t(No symbol) [0x0100890D]\n\tGetHandleVerifier [0x011CA5F3+1013699]\n\tGetHandleVerifier [0x011D3E4C+1052700]\n\tGetHandleVerifier [0x011CD4B4+1025668]\n\tGetHandleVerifier [0x010FEA2B+179195]\n\t(No symbol) [0x010A6833]\n\t(No symbol) [0x010A3198]\n\t(No symbol) [0x010A3337]\n\t(No symbol) [0x0109B4BE]\n\tBaseThreadInitThunk [0x77467BA9+25]\n\tRtlInitializeExceptionChain [0x7767C10B+107]\n\tRtlClearBits [0x7767C08F+191]\n\n", "trace": "  File \"D:\\PycharmProjects\\Alza_diplom\\pages\\base_page.py\", line 31, in click\n    element.click()\n  File \"D:\\PycharmProjects\\Alza_diplom\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"D:\\PycharmProjects\\Alza_diplom\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\PycharmProjects\\Alza_diplom\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"D:\\PycharmProjects\\Alza_diplom\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "steps": [{"name": "Get element", "status": "passed", "start": 1722613922513, "stop": 1722613922724}], "start": 1722613922513, "stop": 1722613923869}], "start": 1722613922513, "stop": 1722613923913}], "start": 1722613912948, "stop": 1722613923923, "uuid": "1a509815-cdd7-48a7-ba85-7cfcf6364235", "historyId": "68189f8057644649ee49eae513550dba", "testCaseId": "68189f8057644649ee49eae513550dba", "fullName": "tests.test_product#test_buy_button", "labels": [{"name": "feature", "value": "Product page"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_product"}, {"name": "host", "value": "arret"}, {"name": "thread", "value": "7496-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_product"}]}