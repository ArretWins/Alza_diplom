{"name": "test_markets_and_boxes", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium carousel0-alz-53 carousel0-alz-41 white btn-small btn-textLeft btn-inline carouselx-wmraq\" tabindex=\"0\" type=\"button\" data-testid=\"itemButton\">...</button> is not clickable at point (633, 923). Other element would receive the click: <div class=\"cookies-info__inner\">...</div>\n  (Session info: chrome=127.0.6533.100)\nStacktrace:\n\tGetHandleVerifier [0x00578923+23283]\n\t(No symbol) [0x0053E934]\n\t(No symbol) [0x00470733]\n\t(No symbol) [0x004B91C7]\n\t(No symbol) [0x004B75D9]\n\t(No symbol) [0x004B54CB]\n\t(No symbol) [0x004B4AAF]\n\t(No symbol) [0x004A99EF]\n\t(No symbol) [0x004D441C]\n\t(No symbol) [0x004A9485]\n\t(No symbol) [0x004D46B4]\n\t(No symbol) [0x004ECB8D]\n\t(No symbol) [0x004D41B6]\n\t(No symbol) [0x004A8017]\n\t(No symbol) [0x004A890D]\n\tGetHandleVerifier [0x0066A5F3+1013699]\n\tGetHandleVerifier [0x00673E4C+1052700]\n\tGetHandleVerifier [0x0066D4B4+1025668]\n\tGetHandleVerifier [0x0059EA2B+179195]\n\t(No symbol) [0x00546833]\n\t(No symbol) [0x00543198]\n\t(No symbol) [0x00543337]\n\t(No symbol) [0x0053B4BE]\n\tBaseThreadInitThunk [0x767F7BA9+25]\n\tRtlInitializeExceptionChain [0x776DC10B+107]\n\tRtlClearBits [0x776DC08F+191]", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8c907a2ab96979f6e3dab0697ab22f89\")>\n\n    @allure.feature('Delivery')\n    def test_markets_and_boxes(driver):\n        main_page = MainPage(driver)\n>       main_page.buy_first_product()\n\ntests\\test_delivery_page.py:75: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\main_page.py:47: in buy_first_product\n    self.assert_item_to_basket()\npages\\main_page.py:76: in assert_item_to_basket\n    self.click(self.FIRST_ITEM_BUTTON)\npages\\base_page.py:30: in click\n    element.click()\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001E29075C5F0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...dInitThunk [0x767F7BA9+25]\\\\n\\\\tRtlInitializeExceptionChain [0x776DC10B+107]\\\\n\\\\tRtlClearBits [0x776DC08F+191]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium carousel0-alz-53 carousel0-alz-41 white btn-small btn-textLeft btn-inline carouselx-wmraq\" tabindex=\"0\" type=\"button\" data-testid=\"itemButton\">...</button> is not clickable at point (633, 923). Other element would receive the click: <div class=\"cookies-info__inner\">...</div>\nE         (Session info: chrome=127.0.6533.100)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00578923+23283]\nE       \t(No symbol) [0x0053E934]\nE       \t(No symbol) [0x00470733]\nE       \t(No symbol) [0x004B91C7]\nE       \t(No symbol) [0x004B75D9]\nE       \t(No symbol) [0x004B54CB]\nE       \t(No symbol) [0x004B4AAF]\nE       \t(No symbol) [0x004A99EF]\nE       \t(No symbol) [0x004D441C]\nE       \t(No symbol) [0x004A9485]\nE       \t(No symbol) [0x004D46B4]\nE       \t(No symbol) [0x004ECB8D]\nE       \t(No symbol) [0x004D41B6]\nE       \t(No symbol) [0x004A8017]\nE       \t(No symbol) [0x004A890D]\nE       \tGetHandleVerifier [0x0066A5F3+1013699]\nE       \tGetHandleVerifier [0x00673E4C+1052700]\nE       \tGetHandleVerifier [0x0066D4B4+1025668]\nE       \tGetHandleVerifier [0x0059EA2B+179195]\nE       \t(No symbol) [0x00546833]\nE       \t(No symbol) [0x00543198]\nE       \t(No symbol) [0x00543337]\nE       \t(No symbol) [0x0053B4BE]\nE       \tBaseThreadInitThunk [0x767F7BA9+25]\nE       \tRtlInitializeExceptionChain [0x776DC10B+107]\nE       \tRtlClearBits [0x776DC08F+191]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: ElementClickInterceptedException"}, "steps": [{"name": "Buy first product", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium carousel0-alz-53 carousel0-alz-41 white btn-small btn-textLeft btn-inline carouselx-wmraq\" tabindex=\"0\" type=\"button\" data-testid=\"itemButton\">...</button> is not clickable at point (633, 923). Other element would receive the click: <div class=\"cookies-info__inner\">...</div>\n  (Session info: chrome=127.0.6533.100)\nStacktrace:\n\tGetHandleVerifier [0x00578923+23283]\n\t(No symbol) [0x0053E934]\n\t(No symbol) [0x00470733]\n\t(No symbol) [0x004B91C7]\n\t(No symbol) [0x004B75D9]\n\t(No symbol) [0x004B54CB]\n\t(No symbol) [0x004B4AAF]\n\t(No symbol) [0x004A99EF]\n\t(No symbol) [0x004D441C]\n\t(No symbol) [0x004A9485]\n\t(No symbol) [0x004D46B4]\n\t(No symbol) [0x004ECB8D]\n\t(No symbol) [0x004D41B6]\n\t(No symbol) [0x004A8017]\n\t(No symbol) [0x004A890D]\n\tGetHandleVerifier [0x0066A5F3+1013699]\n\tGetHandleVerifier [0x00673E4C+1052700]\n\tGetHandleVerifier [0x0066D4B4+1025668]\n\tGetHandleVerifier [0x0059EA2B+179195]\n\t(No symbol) [0x00546833]\n\t(No symbol) [0x00543198]\n\t(No symbol) [0x00543337]\n\t(No symbol) [0x0053B4BE]\n\tBaseThreadInitThunk [0x767F7BA9+25]\n\tRtlInitializeExceptionChain [0x776DC10B+107]\n\tRtlClearBits [0x776DC08F+191]\n\n", "trace": "  File \"D:\\PycharmProjects\\Alza_diplom\\pages\\main_page.py\", line 47, in buy_first_product\n    self.assert_item_to_basket()\n  File \"D:\\PycharmProjects\\Alza_diplom\\pages\\main_page.py\", line 76, in assert_item_to_basket\n    self.click(self.FIRST_ITEM_BUTTON)\n  File \"D:\\PycharmProjects\\Alza_diplom\\pages\\base_page.py\", line 30, in click\n    element.click()\n  File \"D:\\PycharmProjects\\Alza_diplom\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"D:\\PycharmProjects\\Alza_diplom\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\PycharmProjects\\Alza_diplom\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"D:\\PycharmProjects\\Alza_diplom\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "steps": [{"name": "Open main page", "status": "passed", "steps": [{"name": "Open page", "status": "passed", "start": 1723627965524, "stop": 1723627969192}], "start": 1723627965524, "stop": 1723627969192}, {"name": "Close privacy window", "status": "passed", "steps": [{"name": "Click element on element", "status": "passed", "steps": [{"name": "Get element", "status": "passed", "start": 1723627969193, "stop": 1723627969240}], "start": 1723627969193, "stop": 1723627969323}], "start": 1723627969193, "stop": 1723627969323}, {"name": "Take item to basket", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium carousel0-alz-53 carousel0-alz-41 white btn-small btn-textLeft btn-inline carouselx-wmraq\" tabindex=\"0\" type=\"button\" data-testid=\"itemButton\">...</button> is not clickable at point (633, 923). Other element would receive the click: <div class=\"cookies-info__inner\">...</div>\n  (Session info: chrome=127.0.6533.100)\nStacktrace:\n\tGetHandleVerifier [0x00578923+23283]\n\t(No symbol) [0x0053E934]\n\t(No symbol) [0x00470733]\n\t(No symbol) [0x004B91C7]\n\t(No symbol) [0x004B75D9]\n\t(No symbol) [0x004B54CB]\n\t(No symbol) [0x004B4AAF]\n\t(No symbol) [0x004A99EF]\n\t(No symbol) [0x004D441C]\n\t(No symbol) [0x004A9485]\n\t(No symbol) [0x004D46B4]\n\t(No symbol) [0x004ECB8D]\n\t(No symbol) [0x004D41B6]\n\t(No symbol) [0x004A8017]\n\t(No symbol) [0x004A890D]\n\tGetHandleVerifier [0x0066A5F3+1013699]\n\tGetHandleVerifier [0x00673E4C+1052700]\n\tGetHandleVerifier [0x0066D4B4+1025668]\n\tGetHandleVerifier [0x0059EA2B+179195]\n\t(No symbol) [0x00546833]\n\t(No symbol) [0x00543198]\n\t(No symbol) [0x00543337]\n\t(No symbol) [0x0053B4BE]\n\tBaseThreadInitThunk [0x767F7BA9+25]\n\tRtlInitializeExceptionChain [0x776DC10B+107]\n\tRtlClearBits [0x776DC08F+191]\n\n", "trace": "  File \"D:\\PycharmProjects\\Alza_diplom\\pages\\main_page.py\", line 76, in assert_item_to_basket\n    self.click(self.FIRST_ITEM_BUTTON)\n  File \"D:\\PycharmProjects\\Alza_diplom\\pages\\base_page.py\", line 30, in click\n    element.click()\n  File \"D:\\PycharmProjects\\Alza_diplom\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"D:\\PycharmProjects\\Alza_diplom\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\PycharmProjects\\Alza_diplom\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"D:\\PycharmProjects\\Alza_diplom\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "steps": [{"name": "Go to laptops page", "status": "passed", "steps": [{"name": "Click element on element", "status": "passed", "steps": [{"name": "Get element", "status": "passed", "start": 1723627969324, "stop": 1723627969369}], "start": 1723627969324, "stop": 1723627970723}], "start": 1723627969324, "stop": 1723627970723}, {"name": "Click element on element", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium carousel0-alz-53 carousel0-alz-41 white btn-small btn-textLeft btn-inline carouselx-wmraq\" tabindex=\"0\" type=\"button\" data-testid=\"itemButton\">...</button> is not clickable at point (633, 923). Other element would receive the click: <div class=\"cookies-info__inner\">...</div>\n  (Session info: chrome=127.0.6533.100)\nStacktrace:\n\tGetHandleVerifier [0x00578923+23283]\n\t(No symbol) [0x0053E934]\n\t(No symbol) [0x00470733]\n\t(No symbol) [0x004B91C7]\n\t(No symbol) [0x004B75D9]\n\t(No symbol) [0x004B54CB]\n\t(No symbol) [0x004B4AAF]\n\t(No symbol) [0x004A99EF]\n\t(No symbol) [0x004D441C]\n\t(No symbol) [0x004A9485]\n\t(No symbol) [0x004D46B4]\n\t(No symbol) [0x004ECB8D]\n\t(No symbol) [0x004D41B6]\n\t(No symbol) [0x004A8017]\n\t(No symbol) [0x004A890D]\n\tGetHandleVerifier [0x0066A5F3+1013699]\n\tGetHandleVerifier [0x00673E4C+1052700]\n\tGetHandleVerifier [0x0066D4B4+1025668]\n\tGetHandleVerifier [0x0059EA2B+179195]\n\t(No symbol) [0x00546833]\n\t(No symbol) [0x00543198]\n\t(No symbol) [0x00543337]\n\t(No symbol) [0x0053B4BE]\n\tBaseThreadInitThunk [0x767F7BA9+25]\n\tRtlInitializeExceptionChain [0x776DC10B+107]\n\tRtlClearBits [0x776DC08F+191]\n\n", "trace": "  File \"D:\\PycharmProjects\\Alza_diplom\\pages\\base_page.py\", line 30, in click\n    element.click()\n  File \"D:\\PycharmProjects\\Alza_diplom\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"D:\\PycharmProjects\\Alza_diplom\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\PycharmProjects\\Alza_diplom\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"D:\\PycharmProjects\\Alza_diplom\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "steps": [{"name": "Get element", "status": "passed", "start": 1723627970723, "stop": 1723627971417}], "start": 1723627970723, "stop": 1723627972569}], "start": 1723627969323, "stop": 1723627972570}], "start": 1723627965524, "stop": 1723627972570}], "attachments": [{"name": "log", "source": "31802cce-1dc4-4bcc-b9f4-57cbf8ce0919-attachment.txt", "type": "text/plain"}], "start": 1723627965523, "stop": 1723627972571, "uuid": "7f30b713-5b10-4797-8448-38eeddf7933d", "historyId": "1564dfb00c28fc50510338a2ac4334d9", "testCaseId": "1564dfb00c28fc50510338a2ac4334d9", "fullName": "tests.test_delivery_page#test_markets_and_boxes", "labels": [{"name": "feature", "value": "Delivery"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_delivery_page"}, {"name": "host", "value": "arret"}, {"name": "thread", "value": "17700-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_delivery_page"}]}